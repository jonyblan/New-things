@{
    ViewData["Title"] = "Chess Board";
}

<head>
	<link rel="stylesheet" href="~/css/chessboard.css" />
</head>

<h1>Legal moves: @Model.moves.Count</h1>
<h1>Flags: @Model.flags</h1>
<div class="chessboard">
    @for (int row = 0; row < 8; row++)
    {
        <div class="row">
            @for (int col = 7; col >= 0; col--)  // Fix this loop to increment correctly
            {
                <div class="cell @( (row + col) % 2 == 0 ? "white" : "black")" data-row="@row" data-col="@col">
                    @if (Model.BoardImages[row, col] != null)
                    {
                        <img src="./img/pieces/@Model.BoardImages[row, col]" alt="Chess Piece" class="piece" />
                    }
                </div>
            }
        </div>
    }
</div>

<button id="computerMoveBtn">Computer Move</button>

<script>
document.getElementById('computerMoveBtn').addEventListener('click', function(@Model) {
    fetch('/Home/MakeComputerMove', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest' // For ASP.NET Core to recognize AJAX
        }
    })
    .then(response => response.json())  // Assuming the server will send back JSON
    .then(data => {
        if (data.success) {
            location.reload();  // Reload the page to update the board
        } else {
            alert('Failed to make a move: ' + data.message);
        }
    })
    .catch(error => console.error('Error making move:', error));
});
</script>

<!--
<div>
<h1>%Model.moves[0].startSquare[0] %Model.moves[0].startSquare[1]</h1>
<h1>%Model.moves[0].endSquare[0] %Model.moves[0].endSquare[1]</h1>
</div>
-->

<!--
<script>
document.addEventListener('DOMContentLoaded', function() {
    const pieces = document.querySelectorAll('.cell img'); // Reference to images within cells
    pieces.forEach(piece => {
        piece.addEventListener('click', function() {
            const row = this.parentElement.getAttribute('data-row');
            const col = this.parentElement.getAttribute('data-col');
            fetch('/Home/RemovePiece', {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: `row=${row}&col=${col}`
            })
            .then(response => response.text())
            .then(html => {
                document.open();
                document.write(html);
                document.close();
            });
        });
    });
});
</script>
-->