let cantSquaresX = 10;
let cantSquaresY = 10;
let squareSize = 40;

let board;
let frames = 60;
let cantFramesTaken = 0;

let minPercentage = 25;
let maxPercentage = 75;
let increment = 1;

let percentage = minPercentage;

let cantFrames = {
	0: [],
	1: [],
	2: [],
	3: [],
	4: [],
	5: [],
	6: [],
	7: [],
	8: [],
	9: [],
	10: [],
	11: [],
	12: [],
	13: [],
	14: [],
	15: [],
	16: [],
	17: [],
	18: [],
	19: [],
	20: [],
	21: [],
	22: [],
	23: [],
	24: [],
	25: [2251, 2302, 1981, 1990, 2011, 1945, 2192, 1788, 2054, 2042, 1953, 2121, 1800, 1823, 2033, 1905],
	26: [1807, 2252, 2132, 2052, 2252, 2008, 2131, 2090, 2149, 2094, 1720, 1970, 2137, 1920, 2120, 2081],
	27: [2087, 2166, 1996, 1965, 2018, 2060, 1923, 1955, 2040, 1954, 2018, 2171, 2073, 1729, 1951, 1924],
	28: [2060, 2006, 1973, 2072, 2154, 1972, 2144, 1970, 1894, 1746, 2128, 2042, 2063, 1892, 1966, 1928],
	29: [2134, 2182, 1877, 1875, 2146, 2168, 1979, 1988, 1927, 1932, 1907, 1986, 2133, 1857, 1946, 1745],
	30: [2131, 1994, 1985, 1857, 1742, 1795, 2022, 1993, 1933, 2019, 1905, 1874, 2037, 1953, 2036, 1784],
	31: [1963, 1838, 1798, 1831, 1811, 1845, 2126, 1991, 1707, 1949, 2085, 1875, 2035, 2099, 1898, 1761],
	32: [2064, 1893, 1942, 2089, 1710, 1933, 1717, 1938, 1824, 1846, 2048, 1934, 1853, 1894, 1900, 1865],
	33: [2271, 2076, 1896, 1906, 2061, 1766, 1773, 1987, 1914, 1829, 2100, 1932, 2110, 2111, 1917, 1800],
	34: [1804, 1755, 1641, 1941, 1799, 2033, 1878, 1958, 1782, 1840, 1976, 1945, 1812, 2005, 2003, 2041],
	35: [1937, 1857, 1984, 1887, 1988, 2041, 1728, 2169, 1834, 1824, 2178, 1786, 1855, 1898, 2096, 2064],
	36: [1963, 2087, 2004, 1894, 1904, 1858, 1713, 2046, 2006, 1756, 1975, 1849, 1931, 1819, 2096],
	37: [1973, 2031, 1890, 1850, 1823, 1929, 1938, 2122, 1843, 2115, 1850, 2015, 1803, 2049, 1980],
	38: [1873, 1953, 1926, 1898, 1779, 2278, 1776, 2198, 1736, 1794, 1990, 1934, 1925, 1807, 1896],
	39: [1678, 1932, 1934, 1884, 1862, 1857, 1875, 1903, 2035, 1870, 2045, 2049, 2019, 2011, 1756],
	40: [1834, 1732, 2015, 2035, 1912, 1734, 2021, 2012, 1965, 2045, 2059, 2006, 1925, 1807, 1864],
	41: [1883, 1923, 1818, 1921, 2055, 1846, 1947, 1784, 2002, 2128, 1910, 1841, 1978, 2095, 1961],
	42: [1939, 1875, 2020, 1835, 1902, 1965, 1896, 1719, 1918, 1812, 1954, 1933, 2116, 2093, 1868],
	43: [1802, 1922, 1910, 1820, 1792, 2168, 1798, 1906, 1975, 1955, 2056, 1860, 1852, 2121, 2227],
	44: [1754, 1870, 1944, 2029, 1852, 1844, 1647, 1888, 1832, 1984, 1880, 1872, 1873, 1813, 1885],
	45: [1750, 2045, 1966, 1877, 2034, 1785, 1887, 1890, 2001, 2054, 1888, 1944, 1764, 1859, 2022],
	46: [1936, 1914, 1841, 2053, 1765, 1921, 1939, 1851, 2108, 2138, 1743, 1964, 1730, 1838, 1999],
	47: [1797, 1756, 1742, 2102, 1787, 1784, 1802, 1755, 1849, 1947, 1831, 1903, 1824, 1837, 2145],
	48: [1831, 2019, 1667, 1934, 1698, 2004, 1819, 1975, 2079, 2073, 1780, 1965, 1755, 2214, 1630],
	49: [1988, 1727, 1729, 1883, 2004, 1816, 2133, 1988, 1850, 1931, 2021, 1692, 1891, 1894, 1750],
	50: [1937, 1921, 1871, 1794, 1829, 1879, 1934, 1902, 1843, 1949, 1841, 1888, 1865, 1954, 1842],
	51: [1997, 1856, 1739, 1916, 1858, 1790, 1862, 1869, 2043, 1931, 2022, 1865, 2047, 1861, 1885],
	52: [1868, 1920, 1956, 1916, 1952, 1799, 1799, 1849, 1762, 1769, 1704, 1840, 1909, 1942, 1867],
	53: [1936, 1933, 1841, 1901, 1938, 1893, 1960, 1771, 1919, 1678, 1870, 1994, 1801, 1888, 2163],
	54: [1836, 1762, 1953, 1863, 1966, 2004, 2008, 1881, 1854, 2344, 1901, 1857, 1961, 1834, 1914],
	55: [2099, 1864, 1888, 2044, 1987, 2078, 2028, 1824, 1931, 1863, 1754, 1743, 1563, 1898, 1860],
	56: [1692, 2038, 1823, 1876, 1871, 1918, 2019, 1808, 1943, 1948, 1875, 1980, 1977, 1788, 2005],
	57: [1654, 1939, 2069, 2082, 1636, 2084, 2219, 2109, 1863, 1798, 1899, 2096, 1837, 1841, 1799],
	58: [1767, 1952, 1736, 1882, 1908, 1798, 2005, 2081, 2231, 2077, 1974, 1721, 1764, 2278, 1979],
	59: [1823, 2094, 1898, 1967, 1814, 1816, 2069, 1887, 2067, 1723, 1775, 1831, 1955, 2084, 2019],
	60: [1966, 2061, 1836, 1801, 1880, 1745, 2090, 1847, 2146, 1745, 2149, 1888, 1795, 1982, 1964],
	61: [2039, 1845, 1958, 1961, 1768, 2022, 1922, 1815, 1898, 1725, 1837, 1904, 1924, 1983, 1944],
	62: [1788, 2058, 1855, 1852, 1919, 1869, 1992, 1940, 1788, 1707, 2150, 1945, 1730, 2191, 1869],
	63: [1933, 1933, 2053, 2029, 1774, 2246, 2040, 2175, 2107, 2038, 1950, 1638, 1739, 1729, 1781],
	64: [1919, 1852, 1810, 1984, 1885, 1908, 1898, 1875, 1921, 1789, 1801, 1979, 1825, 1858, 2056],
	65: [2143, 1844, 1870, 2015, 2177, 2137, 1893, 2069, 1583, 1826, 1754, 2009, 1874, 2056, 1727],
	66: [2045, 2201, 1972, 2221, 1786, 2255, 1804, 1971, 2052, 2174, 2017, 1886, 1848, 1921, 1976],
	67: [1896, 2075, 1823, 1902, 2014, 2114, 1915, 1991, 2060, 1830, 1943, 1724, 2171, 1871, 2165],
	68: [1846, 1711, 1881, 2034, 1965, 1774, 1946, 1946, 1780, 2055, 1910, 1753, 1866, 1949, 1755],
	69: [2065, 1750, 1974, 1872, 1874, 2233, 1919, 1901, 1810, 1819, 1979, 2110, 1858, 1817, 1978],
	70: [1908, 1968, 1911, 1879, 1948, 1847, 2061, 1890, 2122, 1779, 1949, 1898, 2046, 2177, 2008],
	71: [1966, 1728, 1958, 2082, 1971, 1986, 2114, 1947, 1795, 1834, 1869, 2039, 1942, 1845, 2036],
	72: [1870, 1918, 2092, 2153, 2061, 1617, 1889, 2022, 1823, 1963, 2089, 2051, 1867, 1802, 1851],
	73: [2240, 2067, 2009, 2151, 1839, 1991, 1798, 1875, 1658, 1993, 2326, 2139, 2086, 1903, 1916],
	74: [1953, 2281, 2310, 1858, 1798, 1601, 1875, 1942, 1976, 2113, 2167, 1851, 2045, 1687, 2053],
	75: [2029, 2082, 1883, 1964, 2018, 2073, 2234, 1991, 2066, 1836, 2094, 1922, 1918, 1996, 1996],
	76: [],
	77: [],
	78: [],
	79: [],
	80: [],
	81: [],
	82: [],
	83: [],
	84: [],
	85: [],
	86: [],
	87: [],
	88: [],
	89: [],
	90: [],
	91: [],
	92: [],
	93: [],
	94: [],
	95: [],
	96: [],
	97: [],
	98: [],
	99: [],
	100: [],
}

function setup(){
	createCanvas(cantSquaresX * squareSize, cantSquaresY * squareSize);
	board = new Board(cantSquaresX, cantSquaresY, squareSize, percentage);
	frameRate(frames);
}

function draw(){
	background(0);
	board.show();
	cantFramesTaken++;
	if (board.update() & 1) {
		console.log("Game Over. Cant Frames: " + cantFramesTaken);
		cantFrames[percentage].push(cantFramesTaken);
		let sum = 0, len = cantFrames[percentage].length;
		for(let i = 0; i < len; i++){
			sum += cantFrames[percentage][i];
		}
		console.log("Current Average: " + sum / len);
		cantFramesTaken = 0;
		if(percentage >= maxPercentage){
			percentage = minPercentage;
		}
		else{
			percentage += increment;
		}
		board = new Board(cantSquaresX, cantSquaresY, squareSize, percentage);
	}

}

function getBestTime(){
	let best = 1000000, bestI = 0, bestJ = 0;
	for(let i = 0; i <= 100; i++){
		for(let j = 0; j < cantFrames[i].length; j++){
			if(cantFrames[i][j] < best){
				best = cantFrames[i][j];
				bestI = i;
				bestJ = j;
			}
		}
	}
	console.log(best, bestI, bestJ);
}

function getBestAverage(){
	let best = 1000000, bestI = 0;
	for(let i = 0; i <= 100; i++){
		let current = 0;
		for(let j = 0; j < cantFrames[i].length; j++){
			current += cantFrames[i][j];
		}
		if((current / cantFrames[i].length) < best){
			best = current / cantFrames[i].length;
			bestI = i;
		}
	}
	console.log(best, bestI);
	return 0;
}